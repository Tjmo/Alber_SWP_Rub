import random

class samsin:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def append_end(self, *args):
        for data in args:
            new_samsin = samsin(data)
            if self.head is None:
                self.head = new_samsin
                continue
            last_samsin = self.head
            while last_samsin.next:
                last_samsin = last_samsin.next
            last_samsin.next = new_samsin
        
    def print_list(self):
        curr_samsin = self.head
        while curr_samsin:
            print(curr_samsin.data)
            curr_samsin = curr_samsin.next

    def length(self):
        curr_samsin = self.head
        count = 0
        while curr_samsin:
            count += 1
            curr_samsin = curr_samsin.next
        return count
    
    def print_all_elements(self):
        curr_samsin = self.head
        while curr_samsin:
            print(curr_samsin.data)
            curr_samsin = curr_samsin.next


#llist = LinkedList()
#llist.append_end(1, 2, 3, 4, 5)

def main():
    llist = LinkedList()
    for o in range(10):
        llist.append_end(random.randint(1,100))
    print("Length of linked list:",llist.length())
    llist.print_all_elements()

if __name__ == "__main__":
    main()